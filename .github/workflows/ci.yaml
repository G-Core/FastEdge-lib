name: Continuous Integration

on: [ push ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: "self-hosted"

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      #- name: Cleanup cargo advisory-db
      #  run: |
      #    rm -fr /home/github-runner/actions-runner/_work/_temp/_github_home/.cargo/advisory-db/github.com-2f857891b7f43c59

      #- name: Configure the check
      #  run: |
      #    curl -O https://bitbucket.gcore.lu/projects/CORE/repos/handbook/raw/tools/allowed-rust-licenses/deny.toml
      #    cat deny.custom >> deny.toml
      #    sed 's/#"RUSTSEC-0000-0000"/"RUSTSEC-2023-0052"/g' deny.toml > output
      #    mv output deny.toml

      #- name: Vuln and licence check
      #  uses: EmbarkStudios/cargo-deny-action@v1

      #- name: Release build
      #  uses: actions-rs/cargo@v1
      #  with:
      #    command: build
      #    args: --release --all-features

      #- name: Install cargo-audit binary crate
      #  uses: actions-rs/install@v0.1
      #  with:
      #    crate: cargo-audit
      #    version: latest
      #    use-tool-cache: true

      #- name: Annotate commit with clippy warnings
      #  uses: actions-rs/clippy-check@v1
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    args: --all-features

      #- name: Security audit
      #  uses: actions-rs/audit-check@v1
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    needs: build
    runs-on: "self-hosted"
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: clean

      - uses: actions-rs/cargo@v1
        name: Run test with code coverage report
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - id: coverage
        name: Collect code coverage
        uses: actions-rs/grcov@v0.1

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ${{ steps.coverage.outputs.report }}
